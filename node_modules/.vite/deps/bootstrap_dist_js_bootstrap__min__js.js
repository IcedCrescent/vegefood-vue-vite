import {
  require_jquery
} from "./chunk-Z5KHBOZF.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS
} from "./chunk-OL3AADLO.js";

// node_modules/popper.js/dist/esm/popper.js
var popper_exports = {};
__export(popper_exports, {
  default: () => popper_default
});
function microtaskDebounce(fn) {
  var called = false;
  return function() {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function() {
      called = false;
      fn();
    });
  };
}
function taskDebounce(fn) {
  var scheduled = false;
  return function() {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function() {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === "[object Function]";
}
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  var window2 = element.ownerDocument.defaultView;
  var css = window2.getComputedStyle(element, null);
  return property ? css[property] : css;
}
function getParentNode(element) {
  if (element.nodeName === "HTML") {
    return element;
  }
  return element.parentNode || element.host;
}
function getScrollParent(element) {
  if (!element) {
    return document.body;
  }
  switch (element.nodeName) {
    case "HTML":
    case "BODY":
      return element.ownerDocument.body;
    case "#document":
      return element.body;
  }
  var _getStyleComputedProp = getStyleComputedProperty(element), overflow = _getStyleComputedProp.overflow, overflowX = _getStyleComputedProp.overflowX, overflowY = _getStyleComputedProp.overflowY;
  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }
  return getScrollParent(getParentNode(element));
}
function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }
  var noOffsetParent = isIE(10) ? document.body : null;
  var offsetParent = element.offsetParent || null;
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }
  var nodeName = offsetParent && offsetParent.nodeName;
  if (!nodeName || nodeName === "BODY" || nodeName === "HTML") {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }
  if (["TH", "TD", "TABLE"].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, "position") === "static") {
    return getOffsetParent(offsetParent);
  }
  return offsetParent;
}
function isOffsetContainer(element) {
  var nodeName = element.nodeName;
  if (nodeName === "BODY") {
    return false;
  }
  return nodeName === "HTML" || getOffsetParent(element.firstElementChild) === element;
}
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }
  return node;
}
function findCommonOffsetParent(element1, element2) {
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;
  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }
    return getOffsetParent(commonAncestorContainer);
  }
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "top";
  var upperSide = side === "top" ? "scrollTop" : "scrollLeft";
  var nodeName = element.nodeName;
  if (nodeName === "BODY" || nodeName === "HTML") {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }
  return element[upperSide];
}
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var scrollTop = getScroll(element, "top");
  var scrollLeft = getScroll(element, "left");
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}
function getBordersSize(styles, axis) {
  var sideA = axis === "x" ? "Left" : "Top";
  var sideB = sideA === "Left" ? "Right" : "Bottom";
  return parseFloat(styles["border" + sideA + "Width"]) + parseFloat(styles["border" + sideB + "Width"]);
}
function getSize(axis, body, html, computedStyle) {
  return Math.max(body["offset" + axis], body["scroll" + axis], html["client" + axis], html["offset" + axis], html["scroll" + axis], isIE(10) ? parseInt(html["offset" + axis]) + parseInt(computedStyle["margin" + (axis === "Height" ? "Top" : "Left")]) + parseInt(computedStyle["margin" + (axis === "Height" ? "Bottom" : "Right")]) : 0);
}
function getWindowSizes(document2) {
  var body = document2.body;
  var html = document2.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);
  return {
    height: getSize("Height", body, html, computedStyle),
    width: getSize("Width", body, html, computedStyle)
  };
}
function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}
function getBoundingClientRect(element) {
  var rect = {};
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, "top");
      var scrollLeft = getScroll(element, "left");
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {
  }
  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };
  var sizes = element.nodeName === "HTML" ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;
  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, "x");
    vertScrollbar -= getBordersSize(styles, "y");
    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }
  return getClientRect(result);
}
function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
  var isIE102 = isIE(10);
  var isHTML = parent.nodeName === "HTML";
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);
  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth);
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;
  if (!isIE102 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);
    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }
  if (isIE102 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== "BODY") {
    offsets = includeScroll(offsets, parent);
  }
  return offsets;
}
function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);
  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, "left") : 0;
  var offset2 = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width,
    height
  };
  return getClientRect(offset2);
}
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === "BODY" || nodeName === "HTML") {
    return false;
  }
  if (getStyleComputedProperty(element, "position") === "fixed") {
    return true;
  }
  var parentNode = getParentNode(element);
  if (!parentNode) {
    return false;
  }
  return isFixed(parentNode);
}
function getFixedPositionOffsetParent(element) {
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, "transform") === "none") {
    el = el.parentElement;
  }
  return el || document.documentElement;
}
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  if (boundariesElement === "viewport") {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    var boundariesNode = void 0;
    if (boundariesElement === "scrollParent") {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === "BODY") {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === "window") {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }
    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);
    if (boundariesNode.nodeName === "HTML" && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument), height = _getWindowSizes.height, width = _getWindowSizes.width;
      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      boundaries = offsets;
    }
  }
  padding = padding || 0;
  var isPaddingNumber = typeof padding === "number";
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
  return boundaries;
}
function getArea(_ref) {
  var width = _ref.width, height = _ref.height;
  return width * height;
}
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0;
  if (placement.indexOf("auto") === -1) {
    return placement;
  }
  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };
  var sortedAreas = Object.keys(rects).map(function(key) {
    return _extends({
      key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function(a, b) {
    return b.area - a.area;
  });
  var filteredAreas = sortedAreas.filter(function(_ref2) {
    var width = _ref2.width, height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });
  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
  var variation = placement.split("-")[1];
  return computedPlacement + (variation ? "-" + variation : "");
}
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}
function getOuterSizes(element) {
  var window2 = element.ownerDocument.defaultView;
  var styles = window2.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}
function getOppositePlacement(placement) {
  var hash = { left: "right", right: "left", bottom: "top", top: "bottom" };
  return placement.replace(/left|right|bottom|top/g, function(matched) {
    return hash[matched];
  });
}
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split("-")[0];
  var popperRect = getOuterSizes(popper);
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };
  var isHoriz = ["right", "left"].indexOf(placement) !== -1;
  var mainSide = isHoriz ? "top" : "left";
  var secondarySide = isHoriz ? "left" : "top";
  var measurement = isHoriz ? "height" : "width";
  var secondaryMeasurement = !isHoriz ? "height" : "width";
  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }
  return popperOffsets;
}
function find(arr, check) {
  if (Array.prototype.find) {
    return arr.find(check);
  }
  return arr.filter(check)[0];
}
function findIndex(arr, prop, value) {
  if (Array.prototype.findIndex) {
    return arr.findIndex(function(cur) {
      return cur[prop] === value;
    });
  }
  var match = find(arr, function(obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}
function runModifiers(modifiers2, data, ends) {
  var modifiersToRun = ends === void 0 ? modifiers2 : modifiers2.slice(0, findIndex(modifiers2, "name", ends));
  modifiersToRun.forEach(function(modifier) {
    if (modifier["function"]) {
      console.warn("`modifier.function` is deprecated, use `modifier.fn`!");
    }
    var fn = modifier["function"] || modifier.fn;
    if (modifier.enabled && isFunction(fn)) {
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);
      data = fn(data, modifier);
    }
  });
  return data;
}
function update() {
  if (this.state.isDestroyed) {
    return;
  }
  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);
  data.originalPlacement = data.placement;
  data.positionFixed = this.options.positionFixed;
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
  data.offsets.popper.position = this.options.positionFixed ? "fixed" : "absolute";
  data = runModifiers(this.modifiers, data);
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}
function isModifierEnabled(modifiers2, modifierName) {
  return modifiers2.some(function(_ref) {
    var name = _ref.name, enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}
function getSupportedPropertyName(property) {
  var prefixes = [false, "ms", "Webkit", "Moz", "O"];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);
  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? "" + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== "undefined") {
      return toCheck;
    }
  }
  return null;
}
function destroy() {
  this.state.isDestroyed = true;
  if (isModifierEnabled(this.modifiers, "applyStyle")) {
    this.popper.removeAttribute("x-placement");
    this.popper.style.position = "";
    this.popper.style.top = "";
    this.popper.style.left = "";
    this.popper.style.right = "";
    this.popper.style.bottom = "";
    this.popper.style.willChange = "";
    this.popper.style[getSupportedPropertyName("transform")] = "";
  }
  this.disableEventListeners();
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}
function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === "BODY";
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });
  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}
function setupEventListeners(reference, options, state, updateBound) {
  state.updateBound = updateBound;
  getWindow(reference).addEventListener("resize", state.updateBound, { passive: true });
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, "scroll", state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;
  return state;
}
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}
function removeEventListeners(reference, state) {
  getWindow(reference).removeEventListener("resize", state.updateBound);
  state.scrollParents.forEach(function(target) {
    target.removeEventListener("scroll", state.updateBound);
  });
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}
function isNumeric(n) {
  return n !== "" && !isNaN(parseFloat(n)) && isFinite(n);
}
function setStyles(element, styles) {
  Object.keys(styles).forEach(function(prop) {
    var unit = "";
    if (["width", "height", "top", "right", "bottom", "left"].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = "px";
    }
    element.style[prop] = styles[prop] + unit;
  });
}
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function(prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}
function applyStyle(data) {
  setStyles(data.instance.popper, data.styles);
  setAttributes(data.instance.popper, data.attributes);
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }
  return data;
}
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
  popper.setAttribute("x-placement", placement);
  setStyles(popper, { position: options.positionFixed ? "fixed" : "absolute" });
  return options;
}
function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var round = Math.round, floor = Math.floor;
  var noRound = function noRound2(v) {
    return v;
  };
  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);
  var isVertical = ["left", "right"].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf("-") !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;
  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}
function computeStyle(data, options) {
  var x = options.x, y = options.y;
  var popper = data.offsets.popper;
  var legacyGpuAccelerationOption = find(data.instance.modifiers, function(modifier) {
    return modifier.name === "applyStyle";
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== void 0) {
    console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== void 0 ? legacyGpuAccelerationOption : options.gpuAcceleration;
  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);
  var styles = {
    position: popper.position
  };
  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
  var sideA = x === "bottom" ? "top" : "bottom";
  var sideB = y === "right" ? "left" : "right";
  var prefixedProperty = getSupportedPropertyName("transform");
  var left = void 0, top = void 0;
  if (sideA === "bottom") {
    if (offsetParent.nodeName === "HTML") {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === "right") {
    if (offsetParent.nodeName === "HTML") {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = "translate3d(" + left + "px, " + top + "px, 0)";
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = "transform";
  } else {
    var invertTop = sideA === "bottom" ? -1 : 1;
    var invertLeft = sideB === "right" ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ", " + sideB;
  }
  var attributes = {
    "x-placement": data.placement
  };
  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
  return data;
}
function isModifierRequired(modifiers2, requestingName, requestedName) {
  var requesting = find(modifiers2, function(_ref) {
    var name = _ref.name;
    return name === requestingName;
  });
  var isRequired = !!requesting && modifiers2.some(function(modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });
  if (!isRequired) {
    var _requesting = "`" + requestingName + "`";
    var requested = "`" + requestedName + "`";
    console.warn(requested + " modifier is required by " + _requesting + " modifier in order to work, be sure to include it before " + _requesting + "!");
  }
  return isRequired;
}
function arrow(data, options) {
  var _data$offsets$arrow;
  if (!isModifierRequired(data.instance.modifiers, "arrow", "keepTogether")) {
    return data;
  }
  var arrowElement = options.element;
  if (typeof arrowElement === "string") {
    arrowElement = data.instance.popper.querySelector(arrowElement);
    if (!arrowElement) {
      return data;
    }
  } else {
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn("WARNING: `arrow.element` must be child of its popper element!");
      return data;
    }
  }
  var placement = data.placement.split("-")[0];
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var isVertical = ["left", "right"].indexOf(placement) !== -1;
  var len = isVertical ? "height" : "width";
  var sideCapitalized = isVertical ? "Top" : "Left";
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? "left" : "top";
  var opSide = isVertical ? "bottom" : "right";
  var arrowElementSize = getOuterSizes(arrowElement)[len];
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;
  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css["margin" + sideCapitalized]);
  var popperBorderSide = parseFloat(css["border" + sideCapitalized + "Width"]);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ""), _data$offsets$arrow);
  return data;
}
function getOppositeVariation(variation) {
  if (variation === "end") {
    return "start";
  } else if (variation === "start") {
    return "end";
  }
  return variation;
}
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}
function flip(data, options) {
  if (isModifierEnabled(data.instance.modifiers, "inner")) {
    return data;
  }
  if (data.flipped && data.placement === data.originalPlacement) {
    return data;
  }
  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
  var placement = data.placement.split("-")[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split("-")[1] || "";
  var flipOrder = [];
  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }
  flipOrder.forEach(function(step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }
    placement = data.placement.split("-")[0];
    placementOpposite = getOppositePlacement(placement);
    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;
    var floor = Math.floor;
    var overlapsRef = placement === "left" && floor(popperOffsets.right) > floor(refOffsets.left) || placement === "right" && floor(popperOffsets.left) < floor(refOffsets.right) || placement === "top" && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === "bottom" && floor(popperOffsets.top) < floor(refOffsets.bottom);
    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
    var overflowsBoundaries = placement === "left" && overflowsLeft || placement === "right" && overflowsRight || placement === "top" && overflowsTop || placement === "bottom" && overflowsBottom;
    var isVertical = ["top", "bottom"].indexOf(placement) !== -1;
    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === "start" && overflowsLeft || isVertical && variation === "end" && overflowsRight || !isVertical && variation === "start" && overflowsTop || !isVertical && variation === "end" && overflowsBottom);
    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === "start" && overflowsRight || isVertical && variation === "end" && overflowsLeft || !isVertical && variation === "start" && overflowsBottom || !isVertical && variation === "end" && overflowsTop);
    var flippedVariation = flippedVariationByRef || flippedVariationByContent;
    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      data.flipped = true;
      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }
      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }
      data.placement = placement + (variation ? "-" + variation : "");
      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
      data = runModifiers(data.instance.modifiers, data, "flip");
    }
  });
  return data;
}
function keepTogether(data) {
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var placement = data.placement.split("-")[0];
  var floor = Math.floor;
  var isVertical = ["top", "bottom"].indexOf(placement) !== -1;
  var side = isVertical ? "right" : "bottom";
  var opSide = isVertical ? "left" : "top";
  var measurement = isVertical ? "width" : "height";
  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }
  return data;
}
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];
  if (!value) {
    return str;
  }
  if (unit.indexOf("%") === 0) {
    var element = void 0;
    switch (unit) {
      case "%p":
        element = popperOffsets;
        break;
      case "%":
      case "%r":
      default:
        element = referenceOffsets;
    }
    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === "vh" || unit === "vw") {
    var size = void 0;
    if (unit === "vh") {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    return value;
  }
}
function parseOffset(offset2, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];
  var useHeight = ["right", "left"].indexOf(basePlacement) !== -1;
  var fragments = offset2.split(/(\+|\-)/).map(function(frag) {
    return frag.trim();
  });
  var divider = fragments.indexOf(find(fragments, function(frag) {
    return frag.search(/,|\s/) !== -1;
  }));
  if (fragments[divider] && fragments[divider].indexOf(",") === -1) {
    console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");
  }
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];
  ops = ops.map(function(op, index) {
    var measurement = (index === 1 ? !useHeight : useHeight) ? "height" : "width";
    var mergeWithPrevious = false;
    return op.reduce(function(a, b) {
      if (a[a.length - 1] === "" && ["+", "-"].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, []).map(function(str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });
  ops.forEach(function(op, index) {
    op.forEach(function(frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === "-" ? -1 : 1);
      }
    });
  });
  return offsets;
}
function offset(data, _ref) {
  var offset2 = _ref.offset;
  var placement = data.placement, _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var basePlacement = placement.split("-")[0];
  var offsets = void 0;
  if (isNumeric(+offset2)) {
    offsets = [+offset2, 0];
  } else {
    offsets = parseOffset(offset2, popper, reference, basePlacement);
  }
  if (basePlacement === "left") {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === "right") {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === "top") {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === "bottom") {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }
  data.popper = popper;
  return data;
}
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }
  var transformProp = getSupportedPropertyName("transform");
  var popperStyles = data.instance.popper.style;
  var top = popperStyles.top, left = popperStyles.left, transform = popperStyles[transformProp];
  popperStyles.top = "";
  popperStyles.left = "";
  popperStyles[transformProp] = "";
  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;
  options.boundaries = boundaries;
  var order = options.priority;
  var popper = data.offsets.popper;
  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === "right" ? "left" : "top";
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === "right" ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };
  order.forEach(function(placement) {
    var side = ["left", "top"].indexOf(placement) !== -1 ? "primary" : "secondary";
    popper = _extends({}, popper, check[side](placement));
  });
  data.offsets.popper = popper;
  return data;
}
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split("-")[0];
  var shiftvariation = placement.split("-")[1];
  if (shiftvariation) {
    var _data$offsets = data.offsets, reference = _data$offsets.reference, popper = _data$offsets.popper;
    var isVertical = ["bottom", "top"].indexOf(basePlacement) !== -1;
    var side = isVertical ? "left" : "top";
    var measurement = isVertical ? "width" : "height";
    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };
    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }
  return data;
}
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, "hide", "preventOverflow")) {
    return data;
  }
  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function(modifier) {
    return modifier.name === "preventOverflow";
  }).boundaries;
  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    if (data.hide === true) {
      return data;
    }
    data.hide = true;
    data.attributes["x-out-of-boundaries"] = "";
  } else {
    if (data.hide === false) {
      return data;
    }
    data.hide = false;
    data.attributes["x-out-of-boundaries"] = false;
  }
  return data;
}
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split("-")[0];
  var _data$offsets = data.offsets, popper = _data$offsets.popper, reference = _data$offsets.reference;
  var isHoriz = ["left", "right"].indexOf(basePlacement) !== -1;
  var subtractLength = ["top", "left"].indexOf(basePlacement) === -1;
  popper[isHoriz ? "left" : "top"] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? "width" : "height"] : 0);
  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);
  return data;
}
var isBrowser, timeoutDuration, supportsMicroTasks, debounce, isIE11, isIE10, classCallCheck, createClass, defineProperty, _extends, isFirefox, placements, validPlacements, BEHAVIORS, modifiers, Defaults, Popper, popper_default;
var init_popper = __esm({
  "node_modules/popper.js/dist/esm/popper.js"() {
    isBrowser = typeof window !== "undefined" && typeof document !== "undefined" && typeof navigator !== "undefined";
    timeoutDuration = function() {
      var longerTimeoutBrowsers = ["Edge", "Trident", "Firefox"];
      for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
        if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
          return 1;
        }
      }
      return 0;
    }();
    supportsMicroTasks = isBrowser && window.Promise;
    debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
    isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
    isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
    classCallCheck = function(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    };
    createClass = function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    }();
    defineProperty = function(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, {
          value,
          enumerable: true,
          configurable: true,
          writable: true
        });
      } else {
        obj[key] = value;
      }
      return obj;
    };
    _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
    placements = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"];
    validPlacements = placements.slice(3);
    BEHAVIORS = {
      FLIP: "flip",
      CLOCKWISE: "clockwise",
      COUNTERCLOCKWISE: "counterclockwise"
    };
    modifiers = {
      shift: {
        order: 100,
        enabled: true,
        fn: shift
      },
      offset: {
        order: 200,
        enabled: true,
        fn: offset,
        offset: 0
      },
      preventOverflow: {
        order: 300,
        enabled: true,
        fn: preventOverflow,
        priority: ["left", "right", "top", "bottom"],
        padding: 5,
        boundariesElement: "scrollParent"
      },
      keepTogether: {
        order: 400,
        enabled: true,
        fn: keepTogether
      },
      arrow: {
        order: 500,
        enabled: true,
        fn: arrow,
        element: "[x-arrow]"
      },
      flip: {
        order: 600,
        enabled: true,
        fn: flip,
        behavior: "flip",
        padding: 5,
        boundariesElement: "viewport",
        flipVariations: false,
        flipVariationsByContent: false
      },
      inner: {
        order: 700,
        enabled: false,
        fn: inner
      },
      hide: {
        order: 800,
        enabled: true,
        fn: hide
      },
      computeStyle: {
        order: 850,
        enabled: true,
        fn: computeStyle,
        gpuAcceleration: true,
        x: "bottom",
        y: "right"
      },
      applyStyle: {
        order: 900,
        enabled: true,
        fn: applyStyle,
        onLoad: applyStyleOnLoad,
        gpuAcceleration: void 0
      }
    };
    Defaults = {
      placement: "bottom",
      positionFixed: false,
      eventsEnabled: true,
      removeOnDestroy: false,
      onCreate: function onCreate() {
      },
      onUpdate: function onUpdate() {
      },
      modifiers
    };
    Popper = function() {
      function Popper2(reference, popper) {
        var _this = this;
        var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
        classCallCheck(this, Popper2);
        this.scheduleUpdate = function() {
          return requestAnimationFrame(_this.update);
        };
        this.update = debounce(this.update.bind(this));
        this.options = _extends({}, Popper2.Defaults, options);
        this.state = {
          isDestroyed: false,
          isCreated: false,
          scrollParents: []
        };
        this.reference = reference && reference.jquery ? reference[0] : reference;
        this.popper = popper && popper.jquery ? popper[0] : popper;
        this.options.modifiers = {};
        Object.keys(_extends({}, Popper2.Defaults.modifiers, options.modifiers)).forEach(function(name) {
          _this.options.modifiers[name] = _extends({}, Popper2.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
        });
        this.modifiers = Object.keys(this.options.modifiers).map(function(name) {
          return _extends({
            name
          }, _this.options.modifiers[name]);
        }).sort(function(a, b) {
          return a.order - b.order;
        });
        this.modifiers.forEach(function(modifierOptions) {
          if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
            modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
          }
        });
        this.update();
        var eventsEnabled = this.options.eventsEnabled;
        if (eventsEnabled) {
          this.enableEventListeners();
        }
        this.state.eventsEnabled = eventsEnabled;
      }
      createClass(Popper2, [{
        key: "update",
        value: function update$$1() {
          return update.call(this);
        }
      }, {
        key: "destroy",
        value: function destroy$$1() {
          return destroy.call(this);
        }
      }, {
        key: "enableEventListeners",
        value: function enableEventListeners$$1() {
          return enableEventListeners.call(this);
        }
      }, {
        key: "disableEventListeners",
        value: function disableEventListeners$$1() {
          return disableEventListeners.call(this);
        }
      }]);
      return Popper2;
    }();
    Popper.Utils = (typeof window !== "undefined" ? window : global).PopperUtils;
    Popper.placements = placements;
    Popper.Defaults = Defaults;
    popper_default = Popper;
  }
});

// node_modules/bootstrap/dist/js/bootstrap.min.js
var require_bootstrap_min = __commonJS({
  "node_modules/bootstrap/dist/js/bootstrap.min.js"(exports, module) {
    !function(t, e) {
      "object" == typeof exports && "undefined" != typeof module ? e(exports, (init_popper(), __toCommonJS(popper_exports)), require_jquery()) : "function" == typeof define && define.amd ? define(["exports", "popper.js", "jquery"], e) : e(t.bootstrap = {}, t.Popper, t.jQuery);
    }(exports, function(t, u, g) {
      "use strict";
      function i(t2, e2) {
        for (var n2 = 0; n2 < e2.length; n2++) {
          var i2 = e2[n2];
          i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t2, i2.key, i2);
        }
      }
      function s(t2, e2, n2) {
        return e2 && i(t2.prototype, e2), n2 && i(t2, n2), t2;
      }
      function l(o2) {
        for (var t2 = 1; t2 < arguments.length; t2++) {
          var r2 = null != arguments[t2] ? arguments[t2] : {}, e2 = Object.keys(r2);
          "function" == typeof Object.getOwnPropertySymbols && (e2 = e2.concat(Object.getOwnPropertySymbols(r2).filter(function(t3) {
            return Object.getOwnPropertyDescriptor(r2, t3).enumerable;
          }))), e2.forEach(function(t3) {
            var e3, n2, i2;
            e3 = o2, i2 = r2[n2 = t3], n2 in e3 ? Object.defineProperty(e3, n2, { value: i2, enumerable: true, configurable: true, writable: true }) : e3[n2] = i2;
          });
        }
        return o2;
      }
      u = u && u.hasOwnProperty("default") ? u.default : u, g = g && g.hasOwnProperty("default") ? g.default : g;
      var e = "transitionend";
      function n(t2) {
        var e2 = this, n2 = false;
        return g(this).one(_.TRANSITION_END, function() {
          n2 = true;
        }), setTimeout(function() {
          n2 || _.triggerTransitionEnd(e2);
        }, t2), this;
      }
      var _ = { TRANSITION_END: "bsTransitionEnd", getUID: function(t2) {
        for (; t2 += ~~(1e6 * Math.random()), document.getElementById(t2); )
          ;
        return t2;
      }, getSelectorFromElement: function(t2) {
        var e2 = t2.getAttribute("data-target");
        if (!e2 || "#" === e2) {
          var n2 = t2.getAttribute("href");
          e2 = n2 && "#" !== n2 ? n2.trim() : "";
        }
        return e2 && document.querySelector(e2) ? e2 : null;
      }, getTransitionDurationFromElement: function(t2) {
        if (!t2)
          return 0;
        var e2 = g(t2).css("transition-duration"), n2 = g(t2).css("transition-delay"), i2 = parseFloat(e2), o2 = parseFloat(n2);
        return i2 || o2 ? (e2 = e2.split(",")[0], n2 = n2.split(",")[0], 1e3 * (parseFloat(e2) + parseFloat(n2))) : 0;
      }, reflow: function(t2) {
        return t2.offsetHeight;
      }, triggerTransitionEnd: function(t2) {
        g(t2).trigger(e);
      }, supportsTransitionEnd: function() {
        return Boolean(e);
      }, isElement: function(t2) {
        return (t2[0] || t2).nodeType;
      }, typeCheckConfig: function(t2, e2, n2) {
        for (var i2 in n2)
          if (Object.prototype.hasOwnProperty.call(n2, i2)) {
            var o2 = n2[i2], r2 = e2[i2], s2 = r2 && _.isElement(r2) ? "element" : (a2 = r2, {}.toString.call(a2).match(/\s([a-z]+)/i)[1].toLowerCase());
            if (!new RegExp(o2).test(s2))
              throw new Error(t2.toUpperCase() + ': Option "' + i2 + '" provided type "' + s2 + '" but expected type "' + o2 + '".');
          }
        var a2;
      }, findShadowRoot: function(t2) {
        if (!document.documentElement.attachShadow)
          return null;
        if ("function" != typeof t2.getRootNode)
          return t2 instanceof ShadowRoot ? t2 : t2.parentNode ? _.findShadowRoot(t2.parentNode) : null;
        var e2 = t2.getRootNode();
        return e2 instanceof ShadowRoot ? e2 : null;
      } };
      g.fn.emulateTransitionEnd = n, g.event.special[_.TRANSITION_END] = { bindType: e, delegateType: e, handle: function(t2) {
        if (g(t2.target).is(this))
          return t2.handleObj.handler.apply(this, arguments);
      } };
      var o = "alert", r = "bs.alert", a = "." + r, c = g.fn[o], h = { CLOSE: "close" + a, CLOSED: "closed" + a, CLICK_DATA_API: "click" + a + ".data-api" }, f = "alert", d = "fade", m = "show", p = function() {
        function i2(t3) {
          this._element = t3;
        }
        var t2 = i2.prototype;
        return t2.close = function(t3) {
          var e2 = this._element;
          t3 && (e2 = this._getRootElement(t3)), this._triggerCloseEvent(e2).isDefaultPrevented() || this._removeElement(e2);
        }, t2.dispose = function() {
          g.removeData(this._element, r), this._element = null;
        }, t2._getRootElement = function(t3) {
          var e2 = _.getSelectorFromElement(t3), n2 = false;
          return e2 && (n2 = document.querySelector(e2)), n2 || (n2 = g(t3).closest("." + f)[0]), n2;
        }, t2._triggerCloseEvent = function(t3) {
          var e2 = g.Event(h.CLOSE);
          return g(t3).trigger(e2), e2;
        }, t2._removeElement = function(e2) {
          var n2 = this;
          if (g(e2).removeClass(m), g(e2).hasClass(d)) {
            var t3 = _.getTransitionDurationFromElement(e2);
            g(e2).one(_.TRANSITION_END, function(t4) {
              return n2._destroyElement(e2, t4);
            }).emulateTransitionEnd(t3);
          } else
            this._destroyElement(e2);
        }, t2._destroyElement = function(t3) {
          g(t3).detach().trigger(h.CLOSED).remove();
        }, i2._jQueryInterface = function(n2) {
          return this.each(function() {
            var t3 = g(this), e2 = t3.data(r);
            e2 || (e2 = new i2(this), t3.data(r, e2)), "close" === n2 && e2[n2](this);
          });
        }, i2._handleDismiss = function(e2) {
          return function(t3) {
            t3 && t3.preventDefault(), e2.close(this);
          };
        }, s(i2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }]), i2;
      }();
      g(document).on(h.CLICK_DATA_API, '[data-dismiss="alert"]', p._handleDismiss(new p())), g.fn[o] = p._jQueryInterface, g.fn[o].Constructor = p, g.fn[o].noConflict = function() {
        return g.fn[o] = c, p._jQueryInterface;
      };
      var v = "button", E = "bs.button", y = "." + E, C = ".data-api", T = g.fn[v], S = "active", b = "btn", I = "focus", D = '[data-toggle^="button"]', w = '[data-toggle="buttons"]', A = 'input:not([type="hidden"])', N = ".active", O = ".btn", k = { CLICK_DATA_API: "click" + y + C, FOCUS_BLUR_DATA_API: "focus" + y + C + " blur" + y + C }, P = function() {
        function n2(t3) {
          this._element = t3;
        }
        var t2 = n2.prototype;
        return t2.toggle = function() {
          var t3 = true, e2 = true, n3 = g(this._element).closest(w)[0];
          if (n3) {
            var i2 = this._element.querySelector(A);
            if (i2) {
              if ("radio" === i2.type)
                if (i2.checked && this._element.classList.contains(S))
                  t3 = false;
                else {
                  var o2 = n3.querySelector(N);
                  o2 && g(o2).removeClass(S);
                }
              if (t3) {
                if (i2.hasAttribute("disabled") || n3.hasAttribute("disabled") || i2.classList.contains("disabled") || n3.classList.contains("disabled"))
                  return;
                i2.checked = !this._element.classList.contains(S), g(i2).trigger("change");
              }
              i2.focus(), e2 = false;
            }
          }
          e2 && this._element.setAttribute("aria-pressed", !this._element.classList.contains(S)), t3 && g(this._element).toggleClass(S);
        }, t2.dispose = function() {
          g.removeData(this._element, E), this._element = null;
        }, n2._jQueryInterface = function(e2) {
          return this.each(function() {
            var t3 = g(this).data(E);
            t3 || (t3 = new n2(this), g(this).data(E, t3)), "toggle" === e2 && t3[e2]();
          });
        }, s(n2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }]), n2;
      }();
      g(document).on(k.CLICK_DATA_API, D, function(t2) {
        t2.preventDefault();
        var e2 = t2.target;
        g(e2).hasClass(b) || (e2 = g(e2).closest(O)), P._jQueryInterface.call(g(e2), "toggle");
      }).on(k.FOCUS_BLUR_DATA_API, D, function(t2) {
        var e2 = g(t2.target).closest(O)[0];
        g(e2).toggleClass(I, /^focus(in)?$/.test(t2.type));
      }), g.fn[v] = P._jQueryInterface, g.fn[v].Constructor = P, g.fn[v].noConflict = function() {
        return g.fn[v] = T, P._jQueryInterface;
      };
      var L = "carousel", j = "bs.carousel", H = "." + j, R = ".data-api", U = g.fn[L], W = { interval: 5e3, keyboard: true, slide: false, pause: "hover", wrap: true, touch: true }, x = { interval: "(number|boolean)", keyboard: "boolean", slide: "(boolean|string)", pause: "(string|boolean)", wrap: "boolean", touch: "boolean" }, F = "next", q = "prev", M = "left", K = "right", Q = { SLIDE: "slide" + H, SLID: "slid" + H, KEYDOWN: "keydown" + H, MOUSEENTER: "mouseenter" + H, MOUSELEAVE: "mouseleave" + H, TOUCHSTART: "touchstart" + H, TOUCHMOVE: "touchmove" + H, TOUCHEND: "touchend" + H, POINTERDOWN: "pointerdown" + H, POINTERUP: "pointerup" + H, DRAG_START: "dragstart" + H, LOAD_DATA_API: "load" + H + R, CLICK_DATA_API: "click" + H + R }, B = "carousel", V = "active", Y = "slide", X = "carousel-item-right", z = "carousel-item-left", G = "carousel-item-next", J = "carousel-item-prev", Z = "pointer-event", $ = ".active", tt = ".active.carousel-item", et = ".carousel-item", nt = ".carousel-item img", it = ".carousel-item-next, .carousel-item-prev", ot = ".carousel-indicators", rt = "[data-slide], [data-slide-to]", st = '[data-ride="carousel"]', at = { TOUCH: "touch", PEN: "pen" }, lt = function() {
        function r2(t3, e2) {
          this._items = null, this._interval = null, this._activeElement = null, this._isPaused = false, this._isSliding = false, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(e2), this._element = t3, this._indicatorsElement = this._element.querySelector(ot), this._touchSupported = "ontouchstart" in document.documentElement || 0 < navigator.maxTouchPoints, this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent), this._addEventListeners();
        }
        var t2 = r2.prototype;
        return t2.next = function() {
          this._isSliding || this._slide(F);
        }, t2.nextWhenVisible = function() {
          !document.hidden && g(this._element).is(":visible") && "hidden" !== g(this._element).css("visibility") && this.next();
        }, t2.prev = function() {
          this._isSliding || this._slide(q);
        }, t2.pause = function(t3) {
          t3 || (this._isPaused = true), this._element.querySelector(it) && (_.triggerTransitionEnd(this._element), this.cycle(true)), clearInterval(this._interval), this._interval = null;
        }, t2.cycle = function(t3) {
          t3 || (this._isPaused = false), this._interval && (clearInterval(this._interval), this._interval = null), this._config.interval && !this._isPaused && (this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));
        }, t2.to = function(t3) {
          var e2 = this;
          this._activeElement = this._element.querySelector(tt);
          var n2 = this._getItemIndex(this._activeElement);
          if (!(t3 > this._items.length - 1 || t3 < 0))
            if (this._isSliding)
              g(this._element).one(Q.SLID, function() {
                return e2.to(t3);
              });
            else {
              if (n2 === t3)
                return this.pause(), void this.cycle();
              var i2 = n2 < t3 ? F : q;
              this._slide(i2, this._items[t3]);
            }
        }, t2.dispose = function() {
          g(this._element).off(H), g.removeData(this._element, j), this._items = null, this._config = null, this._element = null, this._interval = null, this._isPaused = null, this._isSliding = null, this._activeElement = null, this._indicatorsElement = null;
        }, t2._getConfig = function(t3) {
          return t3 = l({}, W, t3), _.typeCheckConfig(L, t3, x), t3;
        }, t2._handleSwipe = function() {
          var t3 = Math.abs(this.touchDeltaX);
          if (!(t3 <= 40)) {
            var e2 = t3 / this.touchDeltaX;
            0 < e2 && this.prev(), e2 < 0 && this.next();
          }
        }, t2._addEventListeners = function() {
          var e2 = this;
          this._config.keyboard && g(this._element).on(Q.KEYDOWN, function(t3) {
            return e2._keydown(t3);
          }), "hover" === this._config.pause && g(this._element).on(Q.MOUSEENTER, function(t3) {
            return e2.pause(t3);
          }).on(Q.MOUSELEAVE, function(t3) {
            return e2.cycle(t3);
          }), this._addTouchEventListeners();
        }, t2._addTouchEventListeners = function() {
          var n2 = this;
          if (this._touchSupported) {
            var e2 = function(t3) {
              n2._pointerEvent && at[t3.originalEvent.pointerType.toUpperCase()] ? n2.touchStartX = t3.originalEvent.clientX : n2._pointerEvent || (n2.touchStartX = t3.originalEvent.touches[0].clientX);
            }, i2 = function(t3) {
              n2._pointerEvent && at[t3.originalEvent.pointerType.toUpperCase()] && (n2.touchDeltaX = t3.originalEvent.clientX - n2.touchStartX), n2._handleSwipe(), "hover" === n2._config.pause && (n2.pause(), n2.touchTimeout && clearTimeout(n2.touchTimeout), n2.touchTimeout = setTimeout(function(t4) {
                return n2.cycle(t4);
              }, 500 + n2._config.interval));
            };
            g(this._element.querySelectorAll(nt)).on(Q.DRAG_START, function(t3) {
              return t3.preventDefault();
            }), this._pointerEvent ? (g(this._element).on(Q.POINTERDOWN, function(t3) {
              return e2(t3);
            }), g(this._element).on(Q.POINTERUP, function(t3) {
              return i2(t3);
            }), this._element.classList.add(Z)) : (g(this._element).on(Q.TOUCHSTART, function(t3) {
              return e2(t3);
            }), g(this._element).on(Q.TOUCHMOVE, function(t3) {
              var e3;
              (e3 = t3).originalEvent.touches && 1 < e3.originalEvent.touches.length ? n2.touchDeltaX = 0 : n2.touchDeltaX = e3.originalEvent.touches[0].clientX - n2.touchStartX;
            }), g(this._element).on(Q.TOUCHEND, function(t3) {
              return i2(t3);
            }));
          }
        }, t2._keydown = function(t3) {
          if (!/input|textarea/i.test(t3.target.tagName))
            switch (t3.which) {
              case 37:
                t3.preventDefault(), this.prev();
                break;
              case 39:
                t3.preventDefault(), this.next();
            }
        }, t2._getItemIndex = function(t3) {
          return this._items = t3 && t3.parentNode ? [].slice.call(t3.parentNode.querySelectorAll(et)) : [], this._items.indexOf(t3);
        }, t2._getItemByDirection = function(t3, e2) {
          var n2 = t3 === F, i2 = t3 === q, o2 = this._getItemIndex(e2), r3 = this._items.length - 1;
          if ((i2 && 0 === o2 || n2 && o2 === r3) && !this._config.wrap)
            return e2;
          var s2 = (o2 + (t3 === q ? -1 : 1)) % this._items.length;
          return -1 === s2 ? this._items[this._items.length - 1] : this._items[s2];
        }, t2._triggerSlideEvent = function(t3, e2) {
          var n2 = this._getItemIndex(t3), i2 = this._getItemIndex(this._element.querySelector(tt)), o2 = g.Event(Q.SLIDE, { relatedTarget: t3, direction: e2, from: i2, to: n2 });
          return g(this._element).trigger(o2), o2;
        }, t2._setActiveIndicatorElement = function(t3) {
          if (this._indicatorsElement) {
            var e2 = [].slice.call(this._indicatorsElement.querySelectorAll($));
            g(e2).removeClass(V);
            var n2 = this._indicatorsElement.children[this._getItemIndex(t3)];
            n2 && g(n2).addClass(V);
          }
        }, t2._slide = function(t3, e2) {
          var n2, i2, o2, r3 = this, s2 = this._element.querySelector(tt), a2 = this._getItemIndex(s2), l2 = e2 || s2 && this._getItemByDirection(t3, s2), c2 = this._getItemIndex(l2), h2 = Boolean(this._interval);
          if (o2 = t3 === F ? (n2 = z, i2 = G, M) : (n2 = X, i2 = J, K), l2 && g(l2).hasClass(V))
            this._isSliding = false;
          else if (!this._triggerSlideEvent(l2, o2).isDefaultPrevented() && s2 && l2) {
            this._isSliding = true, h2 && this.pause(), this._setActiveIndicatorElement(l2);
            var u2 = g.Event(Q.SLID, { relatedTarget: l2, direction: o2, from: a2, to: c2 });
            if (g(this._element).hasClass(Y)) {
              g(l2).addClass(i2), _.reflow(l2), g(s2).addClass(n2), g(l2).addClass(n2);
              var f2 = parseInt(l2.getAttribute("data-interval"), 10);
              this._config.interval = f2 ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, f2) : this._config.defaultInterval || this._config.interval;
              var d2 = _.getTransitionDurationFromElement(s2);
              g(s2).one(_.TRANSITION_END, function() {
                g(l2).removeClass(n2 + " " + i2).addClass(V), g(s2).removeClass(V + " " + i2 + " " + n2), r3._isSliding = false, setTimeout(function() {
                  return g(r3._element).trigger(u2);
                }, 0);
              }).emulateTransitionEnd(d2);
            } else
              g(s2).removeClass(V), g(l2).addClass(V), this._isSliding = false, g(this._element).trigger(u2);
            h2 && this.cycle();
          }
        }, r2._jQueryInterface = function(i2) {
          return this.each(function() {
            var t3 = g(this).data(j), e2 = l({}, W, g(this).data());
            "object" == typeof i2 && (e2 = l({}, e2, i2));
            var n2 = "string" == typeof i2 ? i2 : e2.slide;
            if (t3 || (t3 = new r2(this, e2), g(this).data(j, t3)), "number" == typeof i2)
              t3.to(i2);
            else if ("string" == typeof n2) {
              if ("undefined" == typeof t3[n2])
                throw new TypeError('No method named "' + n2 + '"');
              t3[n2]();
            } else
              e2.interval && (t3.pause(), t3.cycle());
          });
        }, r2._dataApiClickHandler = function(t3) {
          var e2 = _.getSelectorFromElement(this);
          if (e2) {
            var n2 = g(e2)[0];
            if (n2 && g(n2).hasClass(B)) {
              var i2 = l({}, g(n2).data(), g(this).data()), o2 = this.getAttribute("data-slide-to");
              o2 && (i2.interval = false), r2._jQueryInterface.call(g(n2), i2), o2 && g(n2).data(j).to(o2), t3.preventDefault();
            }
          }
        }, s(r2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }, { key: "Default", get: function() {
          return W;
        } }]), r2;
      }();
      g(document).on(Q.CLICK_DATA_API, rt, lt._dataApiClickHandler), g(window).on(Q.LOAD_DATA_API, function() {
        for (var t2 = [].slice.call(document.querySelectorAll(st)), e2 = 0, n2 = t2.length; e2 < n2; e2++) {
          var i2 = g(t2[e2]);
          lt._jQueryInterface.call(i2, i2.data());
        }
      }), g.fn[L] = lt._jQueryInterface, g.fn[L].Constructor = lt, g.fn[L].noConflict = function() {
        return g.fn[L] = U, lt._jQueryInterface;
      };
      var ct = "collapse", ht = "bs.collapse", ut = "." + ht, ft = g.fn[ct], dt = { toggle: true, parent: "" }, gt = { toggle: "boolean", parent: "(string|element)" }, _t = { SHOW: "show" + ut, SHOWN: "shown" + ut, HIDE: "hide" + ut, HIDDEN: "hidden" + ut, CLICK_DATA_API: "click" + ut + ".data-api" }, mt = "show", pt = "collapse", vt = "collapsing", Et = "collapsed", yt = "width", Ct = "height", Tt = ".show, .collapsing", St = '[data-toggle="collapse"]', bt = function() {
        function a2(e2, t3) {
          this._isTransitioning = false, this._element = e2, this._config = this._getConfig(t3), this._triggerArray = [].slice.call(document.querySelectorAll('[data-toggle="collapse"][href="#' + e2.id + '"],[data-toggle="collapse"][data-target="#' + e2.id + '"]'));
          for (var n2 = [].slice.call(document.querySelectorAll(St)), i2 = 0, o2 = n2.length; i2 < o2; i2++) {
            var r2 = n2[i2], s2 = _.getSelectorFromElement(r2), a3 = [].slice.call(document.querySelectorAll(s2)).filter(function(t4) {
              return t4 === e2;
            });
            null !== s2 && 0 < a3.length && (this._selector = s2, this._triggerArray.push(r2));
          }
          this._parent = this._config.parent ? this._getParent() : null, this._config.parent || this._addAriaAndCollapsedClass(this._element, this._triggerArray), this._config.toggle && this.toggle();
        }
        var t2 = a2.prototype;
        return t2.toggle = function() {
          g(this._element).hasClass(mt) ? this.hide() : this.show();
        }, t2.show = function() {
          var t3, e2, n2 = this;
          if (!this._isTransitioning && !g(this._element).hasClass(mt) && (this._parent && 0 === (t3 = [].slice.call(this._parent.querySelectorAll(Tt)).filter(function(t4) {
            return "string" == typeof n2._config.parent ? t4.getAttribute("data-parent") === n2._config.parent : t4.classList.contains(pt);
          })).length && (t3 = null), !(t3 && (e2 = g(t3).not(this._selector).data(ht)) && e2._isTransitioning))) {
            var i2 = g.Event(_t.SHOW);
            if (g(this._element).trigger(i2), !i2.isDefaultPrevented()) {
              t3 && (a2._jQueryInterface.call(g(t3).not(this._selector), "hide"), e2 || g(t3).data(ht, null));
              var o2 = this._getDimension();
              g(this._element).removeClass(pt).addClass(vt), this._element.style[o2] = 0, this._triggerArray.length && g(this._triggerArray).removeClass(Et).attr("aria-expanded", true), this.setTransitioning(true);
              var r2 = "scroll" + (o2[0].toUpperCase() + o2.slice(1)), s2 = _.getTransitionDurationFromElement(this._element);
              g(this._element).one(_.TRANSITION_END, function() {
                g(n2._element).removeClass(vt).addClass(pt).addClass(mt), n2._element.style[o2] = "", n2.setTransitioning(false), g(n2._element).trigger(_t.SHOWN);
              }).emulateTransitionEnd(s2), this._element.style[o2] = this._element[r2] + "px";
            }
          }
        }, t2.hide = function() {
          var t3 = this;
          if (!this._isTransitioning && g(this._element).hasClass(mt)) {
            var e2 = g.Event(_t.HIDE);
            if (g(this._element).trigger(e2), !e2.isDefaultPrevented()) {
              var n2 = this._getDimension();
              this._element.style[n2] = this._element.getBoundingClientRect()[n2] + "px", _.reflow(this._element), g(this._element).addClass(vt).removeClass(pt).removeClass(mt);
              var i2 = this._triggerArray.length;
              if (0 < i2)
                for (var o2 = 0; o2 < i2; o2++) {
                  var r2 = this._triggerArray[o2], s2 = _.getSelectorFromElement(r2);
                  if (null !== s2)
                    g([].slice.call(document.querySelectorAll(s2))).hasClass(mt) || g(r2).addClass(Et).attr("aria-expanded", false);
                }
              this.setTransitioning(true);
              this._element.style[n2] = "";
              var a3 = _.getTransitionDurationFromElement(this._element);
              g(this._element).one(_.TRANSITION_END, function() {
                t3.setTransitioning(false), g(t3._element).removeClass(vt).addClass(pt).trigger(_t.HIDDEN);
              }).emulateTransitionEnd(a3);
            }
          }
        }, t2.setTransitioning = function(t3) {
          this._isTransitioning = t3;
        }, t2.dispose = function() {
          g.removeData(this._element, ht), this._config = null, this._parent = null, this._element = null, this._triggerArray = null, this._isTransitioning = null;
        }, t2._getConfig = function(t3) {
          return (t3 = l({}, dt, t3)).toggle = Boolean(t3.toggle), _.typeCheckConfig(ct, t3, gt), t3;
        }, t2._getDimension = function() {
          return g(this._element).hasClass(yt) ? yt : Ct;
        }, t2._getParent = function() {
          var t3, n2 = this;
          _.isElement(this._config.parent) ? (t3 = this._config.parent, "undefined" != typeof this._config.parent.jquery && (t3 = this._config.parent[0])) : t3 = document.querySelector(this._config.parent);
          var e2 = '[data-toggle="collapse"][data-parent="' + this._config.parent + '"]', i2 = [].slice.call(t3.querySelectorAll(e2));
          return g(i2).each(function(t4, e3) {
            n2._addAriaAndCollapsedClass(a2._getTargetFromElement(e3), [e3]);
          }), t3;
        }, t2._addAriaAndCollapsedClass = function(t3, e2) {
          var n2 = g(t3).hasClass(mt);
          e2.length && g(e2).toggleClass(Et, !n2).attr("aria-expanded", n2);
        }, a2._getTargetFromElement = function(t3) {
          var e2 = _.getSelectorFromElement(t3);
          return e2 ? document.querySelector(e2) : null;
        }, a2._jQueryInterface = function(i2) {
          return this.each(function() {
            var t3 = g(this), e2 = t3.data(ht), n2 = l({}, dt, t3.data(), "object" == typeof i2 && i2 ? i2 : {});
            if (!e2 && n2.toggle && /show|hide/.test(i2) && (n2.toggle = false), e2 || (e2 = new a2(this, n2), t3.data(ht, e2)), "string" == typeof i2) {
              if ("undefined" == typeof e2[i2])
                throw new TypeError('No method named "' + i2 + '"');
              e2[i2]();
            }
          });
        }, s(a2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }, { key: "Default", get: function() {
          return dt;
        } }]), a2;
      }();
      g(document).on(_t.CLICK_DATA_API, St, function(t2) {
        "A" === t2.currentTarget.tagName && t2.preventDefault();
        var n2 = g(this), e2 = _.getSelectorFromElement(this), i2 = [].slice.call(document.querySelectorAll(e2));
        g(i2).each(function() {
          var t3 = g(this), e3 = t3.data(ht) ? "toggle" : n2.data();
          bt._jQueryInterface.call(t3, e3);
        });
      }), g.fn[ct] = bt._jQueryInterface, g.fn[ct].Constructor = bt, g.fn[ct].noConflict = function() {
        return g.fn[ct] = ft, bt._jQueryInterface;
      };
      var It = "dropdown", Dt = "bs.dropdown", wt = "." + Dt, At = ".data-api", Nt = g.fn[It], Ot = new RegExp("38|40|27"), kt = { HIDE: "hide" + wt, HIDDEN: "hidden" + wt, SHOW: "show" + wt, SHOWN: "shown" + wt, CLICK: "click" + wt, CLICK_DATA_API: "click" + wt + At, KEYDOWN_DATA_API: "keydown" + wt + At, KEYUP_DATA_API: "keyup" + wt + At }, Pt = "disabled", Lt = "show", jt = "dropup", Ht = "dropright", Rt = "dropleft", Ut = "dropdown-menu-right", Wt = "position-static", xt = '[data-toggle="dropdown"]', Ft = ".dropdown form", qt = ".dropdown-menu", Mt = ".navbar-nav", Kt = ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)", Qt = "top-start", Bt = "top-end", Vt = "bottom-start", Yt = "bottom-end", Xt = "right-start", zt = "left-start", Gt = { offset: 0, flip: true, boundary: "scrollParent", reference: "toggle", display: "dynamic" }, Jt = { offset: "(number|string|function)", flip: "boolean", boundary: "(string|element)", reference: "(string|element)", display: "string" }, Zt = function() {
        function c2(t3, e2) {
          this._element = t3, this._popper = null, this._config = this._getConfig(e2), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar(), this._addEventListeners();
        }
        var t2 = c2.prototype;
        return t2.toggle = function() {
          if (!this._element.disabled && !g(this._element).hasClass(Pt)) {
            var t3 = c2._getParentFromElement(this._element), e2 = g(this._menu).hasClass(Lt);
            if (c2._clearMenus(), !e2) {
              var n2 = { relatedTarget: this._element }, i2 = g.Event(kt.SHOW, n2);
              if (g(t3).trigger(i2), !i2.isDefaultPrevented()) {
                if (!this._inNavbar) {
                  if ("undefined" == typeof u)
                    throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)");
                  var o2 = this._element;
                  "parent" === this._config.reference ? o2 = t3 : _.isElement(this._config.reference) && (o2 = this._config.reference, "undefined" != typeof this._config.reference.jquery && (o2 = this._config.reference[0])), "scrollParent" !== this._config.boundary && g(t3).addClass(Wt), this._popper = new u(o2, this._menu, this._getPopperConfig());
                }
                "ontouchstart" in document.documentElement && 0 === g(t3).closest(Mt).length && g(document.body).children().on("mouseover", null, g.noop), this._element.focus(), this._element.setAttribute("aria-expanded", true), g(this._menu).toggleClass(Lt), g(t3).toggleClass(Lt).trigger(g.Event(kt.SHOWN, n2));
              }
            }
          }
        }, t2.show = function() {
          if (!(this._element.disabled || g(this._element).hasClass(Pt) || g(this._menu).hasClass(Lt))) {
            var t3 = { relatedTarget: this._element }, e2 = g.Event(kt.SHOW, t3), n2 = c2._getParentFromElement(this._element);
            g(n2).trigger(e2), e2.isDefaultPrevented() || (g(this._menu).toggleClass(Lt), g(n2).toggleClass(Lt).trigger(g.Event(kt.SHOWN, t3)));
          }
        }, t2.hide = function() {
          if (!this._element.disabled && !g(this._element).hasClass(Pt) && g(this._menu).hasClass(Lt)) {
            var t3 = { relatedTarget: this._element }, e2 = g.Event(kt.HIDE, t3), n2 = c2._getParentFromElement(this._element);
            g(n2).trigger(e2), e2.isDefaultPrevented() || (g(this._menu).toggleClass(Lt), g(n2).toggleClass(Lt).trigger(g.Event(kt.HIDDEN, t3)));
          }
        }, t2.dispose = function() {
          g.removeData(this._element, Dt), g(this._element).off(wt), this._element = null, (this._menu = null) !== this._popper && (this._popper.destroy(), this._popper = null);
        }, t2.update = function() {
          this._inNavbar = this._detectNavbar(), null !== this._popper && this._popper.scheduleUpdate();
        }, t2._addEventListeners = function() {
          var e2 = this;
          g(this._element).on(kt.CLICK, function(t3) {
            t3.preventDefault(), t3.stopPropagation(), e2.toggle();
          });
        }, t2._getConfig = function(t3) {
          return t3 = l({}, this.constructor.Default, g(this._element).data(), t3), _.typeCheckConfig(It, t3, this.constructor.DefaultType), t3;
        }, t2._getMenuElement = function() {
          if (!this._menu) {
            var t3 = c2._getParentFromElement(this._element);
            t3 && (this._menu = t3.querySelector(qt));
          }
          return this._menu;
        }, t2._getPlacement = function() {
          var t3 = g(this._element.parentNode), e2 = Vt;
          return t3.hasClass(jt) ? (e2 = Qt, g(this._menu).hasClass(Ut) && (e2 = Bt)) : t3.hasClass(Ht) ? e2 = Xt : t3.hasClass(Rt) ? e2 = zt : g(this._menu).hasClass(Ut) && (e2 = Yt), e2;
        }, t2._detectNavbar = function() {
          return 0 < g(this._element).closest(".navbar").length;
        }, t2._getPopperConfig = function() {
          var e2 = this, t3 = {};
          "function" == typeof this._config.offset ? t3.fn = function(t4) {
            return t4.offsets = l({}, t4.offsets, e2._config.offset(t4.offsets) || {}), t4;
          } : t3.offset = this._config.offset;
          var n2 = { placement: this._getPlacement(), modifiers: { offset: t3, flip: { enabled: this._config.flip }, preventOverflow: { boundariesElement: this._config.boundary } } };
          return "static" === this._config.display && (n2.modifiers.applyStyle = { enabled: false }), n2;
        }, c2._jQueryInterface = function(e2) {
          return this.each(function() {
            var t3 = g(this).data(Dt);
            if (t3 || (t3 = new c2(this, "object" == typeof e2 ? e2 : null), g(this).data(Dt, t3)), "string" == typeof e2) {
              if ("undefined" == typeof t3[e2])
                throw new TypeError('No method named "' + e2 + '"');
              t3[e2]();
            }
          });
        }, c2._clearMenus = function(t3) {
          if (!t3 || 3 !== t3.which && ("keyup" !== t3.type || 9 === t3.which))
            for (var e2 = [].slice.call(document.querySelectorAll(xt)), n2 = 0, i2 = e2.length; n2 < i2; n2++) {
              var o2 = c2._getParentFromElement(e2[n2]), r2 = g(e2[n2]).data(Dt), s2 = { relatedTarget: e2[n2] };
              if (t3 && "click" === t3.type && (s2.clickEvent = t3), r2) {
                var a2 = r2._menu;
                if (g(o2).hasClass(Lt) && !(t3 && ("click" === t3.type && /input|textarea/i.test(t3.target.tagName) || "keyup" === t3.type && 9 === t3.which) && g.contains(o2, t3.target))) {
                  var l2 = g.Event(kt.HIDE, s2);
                  g(o2).trigger(l2), l2.isDefaultPrevented() || ("ontouchstart" in document.documentElement && g(document.body).children().off("mouseover", null, g.noop), e2[n2].setAttribute("aria-expanded", "false"), g(a2).removeClass(Lt), g(o2).removeClass(Lt).trigger(g.Event(kt.HIDDEN, s2)));
                }
              }
            }
        }, c2._getParentFromElement = function(t3) {
          var e2, n2 = _.getSelectorFromElement(t3);
          return n2 && (e2 = document.querySelector(n2)), e2 || t3.parentNode;
        }, c2._dataApiKeydownHandler = function(t3) {
          if ((/input|textarea/i.test(t3.target.tagName) ? !(32 === t3.which || 27 !== t3.which && (40 !== t3.which && 38 !== t3.which || g(t3.target).closest(qt).length)) : Ot.test(t3.which)) && (t3.preventDefault(), t3.stopPropagation(), !this.disabled && !g(this).hasClass(Pt))) {
            var e2 = c2._getParentFromElement(this), n2 = g(e2).hasClass(Lt);
            if (n2 && (!n2 || 27 !== t3.which && 32 !== t3.which)) {
              var i2 = [].slice.call(e2.querySelectorAll(Kt));
              if (0 !== i2.length) {
                var o2 = i2.indexOf(t3.target);
                38 === t3.which && 0 < o2 && o2--, 40 === t3.which && o2 < i2.length - 1 && o2++, o2 < 0 && (o2 = 0), i2[o2].focus();
              }
            } else {
              if (27 === t3.which) {
                var r2 = e2.querySelector(xt);
                g(r2).trigger("focus");
              }
              g(this).trigger("click");
            }
          }
        }, s(c2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }, { key: "Default", get: function() {
          return Gt;
        } }, { key: "DefaultType", get: function() {
          return Jt;
        } }]), c2;
      }();
      g(document).on(kt.KEYDOWN_DATA_API, xt, Zt._dataApiKeydownHandler).on(kt.KEYDOWN_DATA_API, qt, Zt._dataApiKeydownHandler).on(kt.CLICK_DATA_API + " " + kt.KEYUP_DATA_API, Zt._clearMenus).on(kt.CLICK_DATA_API, xt, function(t2) {
        t2.preventDefault(), t2.stopPropagation(), Zt._jQueryInterface.call(g(this), "toggle");
      }).on(kt.CLICK_DATA_API, Ft, function(t2) {
        t2.stopPropagation();
      }), g.fn[It] = Zt._jQueryInterface, g.fn[It].Constructor = Zt, g.fn[It].noConflict = function() {
        return g.fn[It] = Nt, Zt._jQueryInterface;
      };
      var $t = "modal", te = "bs.modal", ee = "." + te, ne = g.fn[$t], ie = { backdrop: true, keyboard: true, focus: true, show: true }, oe = { backdrop: "(boolean|string)", keyboard: "boolean", focus: "boolean", show: "boolean" }, re = { HIDE: "hide" + ee, HIDDEN: "hidden" + ee, SHOW: "show" + ee, SHOWN: "shown" + ee, FOCUSIN: "focusin" + ee, RESIZE: "resize" + ee, CLICK_DISMISS: "click.dismiss" + ee, KEYDOWN_DISMISS: "keydown.dismiss" + ee, MOUSEUP_DISMISS: "mouseup.dismiss" + ee, MOUSEDOWN_DISMISS: "mousedown.dismiss" + ee, CLICK_DATA_API: "click" + ee + ".data-api" }, se = "modal-scrollbar-measure", ae = "modal-backdrop", le = "modal-open", ce = "fade", he = "show", ue = ".modal-dialog", fe = '[data-toggle="modal"]', de = '[data-dismiss="modal"]', ge = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", _e = ".sticky-top", me = function() {
        function o2(t3, e2) {
          this._config = this._getConfig(e2), this._element = t3, this._dialog = t3.querySelector(ue), this._backdrop = null, this._isShown = false, this._isBodyOverflowing = false, this._ignoreBackdropClick = false, this._isTransitioning = false, this._scrollbarWidth = 0;
        }
        var t2 = o2.prototype;
        return t2.toggle = function(t3) {
          return this._isShown ? this.hide() : this.show(t3);
        }, t2.show = function(t3) {
          var e2 = this;
          if (!this._isShown && !this._isTransitioning) {
            g(this._element).hasClass(ce) && (this._isTransitioning = true);
            var n2 = g.Event(re.SHOW, { relatedTarget: t3 });
            g(this._element).trigger(n2), this._isShown || n2.isDefaultPrevented() || (this._isShown = true, this._checkScrollbar(), this._setScrollbar(), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), g(this._element).on(re.CLICK_DISMISS, de, function(t4) {
              return e2.hide(t4);
            }), g(this._dialog).on(re.MOUSEDOWN_DISMISS, function() {
              g(e2._element).one(re.MOUSEUP_DISMISS, function(t4) {
                g(t4.target).is(e2._element) && (e2._ignoreBackdropClick = true);
              });
            }), this._showBackdrop(function() {
              return e2._showElement(t3);
            }));
          }
        }, t2.hide = function(t3) {
          var e2 = this;
          if (t3 && t3.preventDefault(), this._isShown && !this._isTransitioning) {
            var n2 = g.Event(re.HIDE);
            if (g(this._element).trigger(n2), this._isShown && !n2.isDefaultPrevented()) {
              this._isShown = false;
              var i2 = g(this._element).hasClass(ce);
              if (i2 && (this._isTransitioning = true), this._setEscapeEvent(), this._setResizeEvent(), g(document).off(re.FOCUSIN), g(this._element).removeClass(he), g(this._element).off(re.CLICK_DISMISS), g(this._dialog).off(re.MOUSEDOWN_DISMISS), i2) {
                var o3 = _.getTransitionDurationFromElement(this._element);
                g(this._element).one(_.TRANSITION_END, function(t4) {
                  return e2._hideModal(t4);
                }).emulateTransitionEnd(o3);
              } else
                this._hideModal();
            }
          }
        }, t2.dispose = function() {
          [window, this._element, this._dialog].forEach(function(t3) {
            return g(t3).off(ee);
          }), g(document).off(re.FOCUSIN), g.removeData(this._element, te), this._config = null, this._element = null, this._dialog = null, this._backdrop = null, this._isShown = null, this._isBodyOverflowing = null, this._ignoreBackdropClick = null, this._isTransitioning = null, this._scrollbarWidth = null;
        }, t2.handleUpdate = function() {
          this._adjustDialog();
        }, t2._getConfig = function(t3) {
          return t3 = l({}, ie, t3), _.typeCheckConfig($t, t3, oe), t3;
        }, t2._showElement = function(t3) {
          var e2 = this, n2 = g(this._element).hasClass(ce);
          this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.appendChild(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", true), this._element.scrollTop = 0, n2 && _.reflow(this._element), g(this._element).addClass(he), this._config.focus && this._enforceFocus();
          var i2 = g.Event(re.SHOWN, { relatedTarget: t3 }), o3 = function() {
            e2._config.focus && e2._element.focus(), e2._isTransitioning = false, g(e2._element).trigger(i2);
          };
          if (n2) {
            var r2 = _.getTransitionDurationFromElement(this._dialog);
            g(this._dialog).one(_.TRANSITION_END, o3).emulateTransitionEnd(r2);
          } else
            o3();
        }, t2._enforceFocus = function() {
          var e2 = this;
          g(document).off(re.FOCUSIN).on(re.FOCUSIN, function(t3) {
            document !== t3.target && e2._element !== t3.target && 0 === g(e2._element).has(t3.target).length && e2._element.focus();
          });
        }, t2._setEscapeEvent = function() {
          var e2 = this;
          this._isShown && this._config.keyboard ? g(this._element).on(re.KEYDOWN_DISMISS, function(t3) {
            27 === t3.which && (t3.preventDefault(), e2.hide());
          }) : this._isShown || g(this._element).off(re.KEYDOWN_DISMISS);
        }, t2._setResizeEvent = function() {
          var e2 = this;
          this._isShown ? g(window).on(re.RESIZE, function(t3) {
            return e2.handleUpdate(t3);
          }) : g(window).off(re.RESIZE);
        }, t2._hideModal = function() {
          var t3 = this;
          this._element.style.display = "none", this._element.setAttribute("aria-hidden", true), this._element.removeAttribute("aria-modal"), this._isTransitioning = false, this._showBackdrop(function() {
            g(document.body).removeClass(le), t3._resetAdjustments(), t3._resetScrollbar(), g(t3._element).trigger(re.HIDDEN);
          });
        }, t2._removeBackdrop = function() {
          this._backdrop && (g(this._backdrop).remove(), this._backdrop = null);
        }, t2._showBackdrop = function(t3) {
          var e2 = this, n2 = g(this._element).hasClass(ce) ? ce : "";
          if (this._isShown && this._config.backdrop) {
            if (this._backdrop = document.createElement("div"), this._backdrop.className = ae, n2 && this._backdrop.classList.add(n2), g(this._backdrop).appendTo(document.body), g(this._element).on(re.CLICK_DISMISS, function(t4) {
              e2._ignoreBackdropClick ? e2._ignoreBackdropClick = false : t4.target === t4.currentTarget && ("static" === e2._config.backdrop ? e2._element.focus() : e2.hide());
            }), n2 && _.reflow(this._backdrop), g(this._backdrop).addClass(he), !t3)
              return;
            if (!n2)
              return void t3();
            var i2 = _.getTransitionDurationFromElement(this._backdrop);
            g(this._backdrop).one(_.TRANSITION_END, t3).emulateTransitionEnd(i2);
          } else if (!this._isShown && this._backdrop) {
            g(this._backdrop).removeClass(he);
            var o3 = function() {
              e2._removeBackdrop(), t3 && t3();
            };
            if (g(this._element).hasClass(ce)) {
              var r2 = _.getTransitionDurationFromElement(this._backdrop);
              g(this._backdrop).one(_.TRANSITION_END, o3).emulateTransitionEnd(r2);
            } else
              o3();
          } else
            t3 && t3();
        }, t2._adjustDialog = function() {
          var t3 = this._element.scrollHeight > document.documentElement.clientHeight;
          !this._isBodyOverflowing && t3 && (this._element.style.paddingLeft = this._scrollbarWidth + "px"), this._isBodyOverflowing && !t3 && (this._element.style.paddingRight = this._scrollbarWidth + "px");
        }, t2._resetAdjustments = function() {
          this._element.style.paddingLeft = "", this._element.style.paddingRight = "";
        }, t2._checkScrollbar = function() {
          var t3 = document.body.getBoundingClientRect();
          this._isBodyOverflowing = t3.left + t3.right < window.innerWidth, this._scrollbarWidth = this._getScrollbarWidth();
        }, t2._setScrollbar = function() {
          var o3 = this;
          if (this._isBodyOverflowing) {
            var t3 = [].slice.call(document.querySelectorAll(ge)), e2 = [].slice.call(document.querySelectorAll(_e));
            g(t3).each(function(t4, e3) {
              var n3 = e3.style.paddingRight, i3 = g(e3).css("padding-right");
              g(e3).data("padding-right", n3).css("padding-right", parseFloat(i3) + o3._scrollbarWidth + "px");
            }), g(e2).each(function(t4, e3) {
              var n3 = e3.style.marginRight, i3 = g(e3).css("margin-right");
              g(e3).data("margin-right", n3).css("margin-right", parseFloat(i3) - o3._scrollbarWidth + "px");
            });
            var n2 = document.body.style.paddingRight, i2 = g(document.body).css("padding-right");
            g(document.body).data("padding-right", n2).css("padding-right", parseFloat(i2) + this._scrollbarWidth + "px");
          }
          g(document.body).addClass(le);
        }, t2._resetScrollbar = function() {
          var t3 = [].slice.call(document.querySelectorAll(ge));
          g(t3).each(function(t4, e3) {
            var n3 = g(e3).data("padding-right");
            g(e3).removeData("padding-right"), e3.style.paddingRight = n3 || "";
          });
          var e2 = [].slice.call(document.querySelectorAll("" + _e));
          g(e2).each(function(t4, e3) {
            var n3 = g(e3).data("margin-right");
            "undefined" != typeof n3 && g(e3).css("margin-right", n3).removeData("margin-right");
          });
          var n2 = g(document.body).data("padding-right");
          g(document.body).removeData("padding-right"), document.body.style.paddingRight = n2 || "";
        }, t2._getScrollbarWidth = function() {
          var t3 = document.createElement("div");
          t3.className = se, document.body.appendChild(t3);
          var e2 = t3.getBoundingClientRect().width - t3.clientWidth;
          return document.body.removeChild(t3), e2;
        }, o2._jQueryInterface = function(n2, i2) {
          return this.each(function() {
            var t3 = g(this).data(te), e2 = l({}, ie, g(this).data(), "object" == typeof n2 && n2 ? n2 : {});
            if (t3 || (t3 = new o2(this, e2), g(this).data(te, t3)), "string" == typeof n2) {
              if ("undefined" == typeof t3[n2])
                throw new TypeError('No method named "' + n2 + '"');
              t3[n2](i2);
            } else
              e2.show && t3.show(i2);
          });
        }, s(o2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }, { key: "Default", get: function() {
          return ie;
        } }]), o2;
      }();
      g(document).on(re.CLICK_DATA_API, fe, function(t2) {
        var e2, n2 = this, i2 = _.getSelectorFromElement(this);
        i2 && (e2 = document.querySelector(i2));
        var o2 = g(e2).data(te) ? "toggle" : l({}, g(e2).data(), g(this).data());
        "A" !== this.tagName && "AREA" !== this.tagName || t2.preventDefault();
        var r2 = g(e2).one(re.SHOW, function(t3) {
          t3.isDefaultPrevented() || r2.one(re.HIDDEN, function() {
            g(n2).is(":visible") && n2.focus();
          });
        });
        me._jQueryInterface.call(g(e2), o2, this);
      }), g.fn[$t] = me._jQueryInterface, g.fn[$t].Constructor = me, g.fn[$t].noConflict = function() {
        return g.fn[$t] = ne, me._jQueryInterface;
      };
      var pe = "tooltip", ve = "bs.tooltip", Ee = "." + ve, ye = g.fn[pe], Ce = "bs-tooltip", Te = new RegExp("(^|\\s)" + Ce + "\\S+", "g"), Se = { animation: "boolean", template: "string", title: "(string|element|function)", trigger: "string", delay: "(number|object)", html: "boolean", selector: "(string|boolean)", placement: "(string|function)", offset: "(number|string)", container: "(string|element|boolean)", fallbackPlacement: "(string|array)", boundary: "(string|element)" }, be = { AUTO: "auto", TOP: "top", RIGHT: "right", BOTTOM: "bottom", LEFT: "left" }, Ie = { animation: true, template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: false, selector: false, placement: "top", offset: 0, container: false, fallbackPlacement: "flip", boundary: "scrollParent" }, De = "show", we = "out", Ae = { HIDE: "hide" + Ee, HIDDEN: "hidden" + Ee, SHOW: "show" + Ee, SHOWN: "shown" + Ee, INSERTED: "inserted" + Ee, CLICK: "click" + Ee, FOCUSIN: "focusin" + Ee, FOCUSOUT: "focusout" + Ee, MOUSEENTER: "mouseenter" + Ee, MOUSELEAVE: "mouseleave" + Ee }, Ne = "fade", Oe = "show", ke = ".tooltip-inner", Pe = ".arrow", Le = "hover", je = "focus", He = "click", Re = "manual", Ue = function() {
        function i2(t3, e2) {
          if ("undefined" == typeof u)
            throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)");
          this._isEnabled = true, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._popper = null, this.element = t3, this.config = this._getConfig(e2), this.tip = null, this._setListeners();
        }
        var t2 = i2.prototype;
        return t2.enable = function() {
          this._isEnabled = true;
        }, t2.disable = function() {
          this._isEnabled = false;
        }, t2.toggleEnabled = function() {
          this._isEnabled = !this._isEnabled;
        }, t2.toggle = function(t3) {
          if (this._isEnabled)
            if (t3) {
              var e2 = this.constructor.DATA_KEY, n2 = g(t3.currentTarget).data(e2);
              n2 || (n2 = new this.constructor(t3.currentTarget, this._getDelegateConfig()), g(t3.currentTarget).data(e2, n2)), n2._activeTrigger.click = !n2._activeTrigger.click, n2._isWithActiveTrigger() ? n2._enter(null, n2) : n2._leave(null, n2);
            } else {
              if (g(this.getTipElement()).hasClass(Oe))
                return void this._leave(null, this);
              this._enter(null, this);
            }
        }, t2.dispose = function() {
          clearTimeout(this._timeout), g.removeData(this.element, this.constructor.DATA_KEY), g(this.element).off(this.constructor.EVENT_KEY), g(this.element).closest(".modal").off("hide.bs.modal"), this.tip && g(this.tip).remove(), this._isEnabled = null, this._timeout = null, this._hoverState = null, (this._activeTrigger = null) !== this._popper && this._popper.destroy(), this._popper = null, this.element = null, this.config = null, this.tip = null;
        }, t2.show = function() {
          var e2 = this;
          if ("none" === g(this.element).css("display"))
            throw new Error("Please use show on visible elements");
          var t3 = g.Event(this.constructor.Event.SHOW);
          if (this.isWithContent() && this._isEnabled) {
            g(this.element).trigger(t3);
            var n2 = _.findShadowRoot(this.element), i3 = g.contains(null !== n2 ? n2 : this.element.ownerDocument.documentElement, this.element);
            if (t3.isDefaultPrevented() || !i3)
              return;
            var o2 = this.getTipElement(), r2 = _.getUID(this.constructor.NAME);
            o2.setAttribute("id", r2), this.element.setAttribute("aria-describedby", r2), this.setContent(), this.config.animation && g(o2).addClass(Ne);
            var s2 = "function" == typeof this.config.placement ? this.config.placement.call(this, o2, this.element) : this.config.placement, a2 = this._getAttachment(s2);
            this.addAttachmentClass(a2);
            var l2 = this._getContainer();
            g(o2).data(this.constructor.DATA_KEY, this), g.contains(this.element.ownerDocument.documentElement, this.tip) || g(o2).appendTo(l2), g(this.element).trigger(this.constructor.Event.INSERTED), this._popper = new u(this.element, o2, { placement: a2, modifiers: { offset: { offset: this.config.offset }, flip: { behavior: this.config.fallbackPlacement }, arrow: { element: Pe }, preventOverflow: { boundariesElement: this.config.boundary } }, onCreate: function(t4) {
              t4.originalPlacement !== t4.placement && e2._handlePopperPlacementChange(t4);
            }, onUpdate: function(t4) {
              return e2._handlePopperPlacementChange(t4);
            } }), g(o2).addClass(Oe), "ontouchstart" in document.documentElement && g(document.body).children().on("mouseover", null, g.noop);
            var c2 = function() {
              e2.config.animation && e2._fixTransition();
              var t4 = e2._hoverState;
              e2._hoverState = null, g(e2.element).trigger(e2.constructor.Event.SHOWN), t4 === we && e2._leave(null, e2);
            };
            if (g(this.tip).hasClass(Ne)) {
              var h2 = _.getTransitionDurationFromElement(this.tip);
              g(this.tip).one(_.TRANSITION_END, c2).emulateTransitionEnd(h2);
            } else
              c2();
          }
        }, t2.hide = function(t3) {
          var e2 = this, n2 = this.getTipElement(), i3 = g.Event(this.constructor.Event.HIDE), o2 = function() {
            e2._hoverState !== De && n2.parentNode && n2.parentNode.removeChild(n2), e2._cleanTipClass(), e2.element.removeAttribute("aria-describedby"), g(e2.element).trigger(e2.constructor.Event.HIDDEN), null !== e2._popper && e2._popper.destroy(), t3 && t3();
          };
          if (g(this.element).trigger(i3), !i3.isDefaultPrevented()) {
            if (g(n2).removeClass(Oe), "ontouchstart" in document.documentElement && g(document.body).children().off("mouseover", null, g.noop), this._activeTrigger[He] = false, this._activeTrigger[je] = false, this._activeTrigger[Le] = false, g(this.tip).hasClass(Ne)) {
              var r2 = _.getTransitionDurationFromElement(n2);
              g(n2).one(_.TRANSITION_END, o2).emulateTransitionEnd(r2);
            } else
              o2();
            this._hoverState = "";
          }
        }, t2.update = function() {
          null !== this._popper && this._popper.scheduleUpdate();
        }, t2.isWithContent = function() {
          return Boolean(this.getTitle());
        }, t2.addAttachmentClass = function(t3) {
          g(this.getTipElement()).addClass(Ce + "-" + t3);
        }, t2.getTipElement = function() {
          return this.tip = this.tip || g(this.config.template)[0], this.tip;
        }, t2.setContent = function() {
          var t3 = this.getTipElement();
          this.setElementContent(g(t3.querySelectorAll(ke)), this.getTitle()), g(t3).removeClass(Ne + " " + Oe);
        }, t2.setElementContent = function(t3, e2) {
          var n2 = this.config.html;
          "object" == typeof e2 && (e2.nodeType || e2.jquery) ? n2 ? g(e2).parent().is(t3) || t3.empty().append(e2) : t3.text(g(e2).text()) : t3[n2 ? "html" : "text"](e2);
        }, t2.getTitle = function() {
          var t3 = this.element.getAttribute("data-original-title");
          return t3 || (t3 = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title), t3;
        }, t2._getContainer = function() {
          return false === this.config.container ? document.body : _.isElement(this.config.container) ? g(this.config.container) : g(document).find(this.config.container);
        }, t2._getAttachment = function(t3) {
          return be[t3.toUpperCase()];
        }, t2._setListeners = function() {
          var i3 = this;
          this.config.trigger.split(" ").forEach(function(t3) {
            if ("click" === t3)
              g(i3.element).on(i3.constructor.Event.CLICK, i3.config.selector, function(t4) {
                return i3.toggle(t4);
              });
            else if (t3 !== Re) {
              var e2 = t3 === Le ? i3.constructor.Event.MOUSEENTER : i3.constructor.Event.FOCUSIN, n2 = t3 === Le ? i3.constructor.Event.MOUSELEAVE : i3.constructor.Event.FOCUSOUT;
              g(i3.element).on(e2, i3.config.selector, function(t4) {
                return i3._enter(t4);
              }).on(n2, i3.config.selector, function(t4) {
                return i3._leave(t4);
              });
            }
          }), g(this.element).closest(".modal").on("hide.bs.modal", function() {
            i3.element && i3.hide();
          }), this.config.selector ? this.config = l({}, this.config, { trigger: "manual", selector: "" }) : this._fixTitle();
        }, t2._fixTitle = function() {
          var t3 = typeof this.element.getAttribute("data-original-title");
          (this.element.getAttribute("title") || "string" !== t3) && (this.element.setAttribute("data-original-title", this.element.getAttribute("title") || ""), this.element.setAttribute("title", ""));
        }, t2._enter = function(t3, e2) {
          var n2 = this.constructor.DATA_KEY;
          (e2 = e2 || g(t3.currentTarget).data(n2)) || (e2 = new this.constructor(t3.currentTarget, this._getDelegateConfig()), g(t3.currentTarget).data(n2, e2)), t3 && (e2._activeTrigger["focusin" === t3.type ? je : Le] = true), g(e2.getTipElement()).hasClass(Oe) || e2._hoverState === De ? e2._hoverState = De : (clearTimeout(e2._timeout), e2._hoverState = De, e2.config.delay && e2.config.delay.show ? e2._timeout = setTimeout(function() {
            e2._hoverState === De && e2.show();
          }, e2.config.delay.show) : e2.show());
        }, t2._leave = function(t3, e2) {
          var n2 = this.constructor.DATA_KEY;
          (e2 = e2 || g(t3.currentTarget).data(n2)) || (e2 = new this.constructor(t3.currentTarget, this._getDelegateConfig()), g(t3.currentTarget).data(n2, e2)), t3 && (e2._activeTrigger["focusout" === t3.type ? je : Le] = false), e2._isWithActiveTrigger() || (clearTimeout(e2._timeout), e2._hoverState = we, e2.config.delay && e2.config.delay.hide ? e2._timeout = setTimeout(function() {
            e2._hoverState === we && e2.hide();
          }, e2.config.delay.hide) : e2.hide());
        }, t2._isWithActiveTrigger = function() {
          for (var t3 in this._activeTrigger)
            if (this._activeTrigger[t3])
              return true;
          return false;
        }, t2._getConfig = function(t3) {
          return "number" == typeof (t3 = l({}, this.constructor.Default, g(this.element).data(), "object" == typeof t3 && t3 ? t3 : {})).delay && (t3.delay = { show: t3.delay, hide: t3.delay }), "number" == typeof t3.title && (t3.title = t3.title.toString()), "number" == typeof t3.content && (t3.content = t3.content.toString()), _.typeCheckConfig(pe, t3, this.constructor.DefaultType), t3;
        }, t2._getDelegateConfig = function() {
          var t3 = {};
          if (this.config)
            for (var e2 in this.config)
              this.constructor.Default[e2] !== this.config[e2] && (t3[e2] = this.config[e2]);
          return t3;
        }, t2._cleanTipClass = function() {
          var t3 = g(this.getTipElement()), e2 = t3.attr("class").match(Te);
          null !== e2 && e2.length && t3.removeClass(e2.join(""));
        }, t2._handlePopperPlacementChange = function(t3) {
          var e2 = t3.instance;
          this.tip = e2.popper, this._cleanTipClass(), this.addAttachmentClass(this._getAttachment(t3.placement));
        }, t2._fixTransition = function() {
          var t3 = this.getTipElement(), e2 = this.config.animation;
          null === t3.getAttribute("x-placement") && (g(t3).removeClass(Ne), this.config.animation = false, this.hide(), this.show(), this.config.animation = e2);
        }, i2._jQueryInterface = function(n2) {
          return this.each(function() {
            var t3 = g(this).data(ve), e2 = "object" == typeof n2 && n2;
            if ((t3 || !/dispose|hide/.test(n2)) && (t3 || (t3 = new i2(this, e2), g(this).data(ve, t3)), "string" == typeof n2)) {
              if ("undefined" == typeof t3[n2])
                throw new TypeError('No method named "' + n2 + '"');
              t3[n2]();
            }
          });
        }, s(i2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }, { key: "Default", get: function() {
          return Ie;
        } }, { key: "NAME", get: function() {
          return pe;
        } }, { key: "DATA_KEY", get: function() {
          return ve;
        } }, { key: "Event", get: function() {
          return Ae;
        } }, { key: "EVENT_KEY", get: function() {
          return Ee;
        } }, { key: "DefaultType", get: function() {
          return Se;
        } }]), i2;
      }();
      g.fn[pe] = Ue._jQueryInterface, g.fn[pe].Constructor = Ue, g.fn[pe].noConflict = function() {
        return g.fn[pe] = ye, Ue._jQueryInterface;
      };
      var We = "popover", xe = "bs.popover", Fe = "." + xe, qe = g.fn[We], Me = "bs-popover", Ke = new RegExp("(^|\\s)" + Me + "\\S+", "g"), Qe = l({}, Ue.Default, { placement: "right", trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>' }), Be = l({}, Ue.DefaultType, { content: "(string|element|function)" }), Ve = "fade", Ye = "show", Xe = ".popover-header", ze = ".popover-body", Ge = { HIDE: "hide" + Fe, HIDDEN: "hidden" + Fe, SHOW: "show" + Fe, SHOWN: "shown" + Fe, INSERTED: "inserted" + Fe, CLICK: "click" + Fe, FOCUSIN: "focusin" + Fe, FOCUSOUT: "focusout" + Fe, MOUSEENTER: "mouseenter" + Fe, MOUSELEAVE: "mouseleave" + Fe }, Je = function(t2) {
        var e2, n2;
        function i2() {
          return t2.apply(this, arguments) || this;
        }
        n2 = t2, (e2 = i2).prototype = Object.create(n2.prototype), (e2.prototype.constructor = e2).__proto__ = n2;
        var o2 = i2.prototype;
        return o2.isWithContent = function() {
          return this.getTitle() || this._getContent();
        }, o2.addAttachmentClass = function(t3) {
          g(this.getTipElement()).addClass(Me + "-" + t3);
        }, o2.getTipElement = function() {
          return this.tip = this.tip || g(this.config.template)[0], this.tip;
        }, o2.setContent = function() {
          var t3 = g(this.getTipElement());
          this.setElementContent(t3.find(Xe), this.getTitle());
          var e3 = this._getContent();
          "function" == typeof e3 && (e3 = e3.call(this.element)), this.setElementContent(t3.find(ze), e3), t3.removeClass(Ve + " " + Ye);
        }, o2._getContent = function() {
          return this.element.getAttribute("data-content") || this.config.content;
        }, o2._cleanTipClass = function() {
          var t3 = g(this.getTipElement()), e3 = t3.attr("class").match(Ke);
          null !== e3 && 0 < e3.length && t3.removeClass(e3.join(""));
        }, i2._jQueryInterface = function(n3) {
          return this.each(function() {
            var t3 = g(this).data(xe), e3 = "object" == typeof n3 ? n3 : null;
            if ((t3 || !/dispose|hide/.test(n3)) && (t3 || (t3 = new i2(this, e3), g(this).data(xe, t3)), "string" == typeof n3)) {
              if ("undefined" == typeof t3[n3])
                throw new TypeError('No method named "' + n3 + '"');
              t3[n3]();
            }
          });
        }, s(i2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }, { key: "Default", get: function() {
          return Qe;
        } }, { key: "NAME", get: function() {
          return We;
        } }, { key: "DATA_KEY", get: function() {
          return xe;
        } }, { key: "Event", get: function() {
          return Ge;
        } }, { key: "EVENT_KEY", get: function() {
          return Fe;
        } }, { key: "DefaultType", get: function() {
          return Be;
        } }]), i2;
      }(Ue);
      g.fn[We] = Je._jQueryInterface, g.fn[We].Constructor = Je, g.fn[We].noConflict = function() {
        return g.fn[We] = qe, Je._jQueryInterface;
      };
      var Ze = "scrollspy", $e = "bs.scrollspy", tn = "." + $e, en = g.fn[Ze], nn = { offset: 10, method: "auto", target: "" }, on = { offset: "number", method: "string", target: "(string|element)" }, rn = { ACTIVATE: "activate" + tn, SCROLL: "scroll" + tn, LOAD_DATA_API: "load" + tn + ".data-api" }, sn = "dropdown-item", an = "active", ln = '[data-spy="scroll"]', cn = ".nav, .list-group", hn = ".nav-link", un = ".nav-item", fn = ".list-group-item", dn = ".dropdown", gn = ".dropdown-item", _n = ".dropdown-toggle", mn = "offset", pn = "position", vn = function() {
        function n2(t3, e2) {
          var n3 = this;
          this._element = t3, this._scrollElement = "BODY" === t3.tagName ? window : t3, this._config = this._getConfig(e2), this._selector = this._config.target + " " + hn + "," + this._config.target + " " + fn + "," + this._config.target + " " + gn, this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, g(this._scrollElement).on(rn.SCROLL, function(t4) {
            return n3._process(t4);
          }), this.refresh(), this._process();
        }
        var t2 = n2.prototype;
        return t2.refresh = function() {
          var e2 = this, t3 = this._scrollElement === this._scrollElement.window ? mn : pn, o2 = "auto" === this._config.method ? t3 : this._config.method, r2 = o2 === pn ? this._getScrollTop() : 0;
          this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight(), [].slice.call(document.querySelectorAll(this._selector)).map(function(t4) {
            var e3, n3 = _.getSelectorFromElement(t4);
            if (n3 && (e3 = document.querySelector(n3)), e3) {
              var i2 = e3.getBoundingClientRect();
              if (i2.width || i2.height)
                return [g(e3)[o2]().top + r2, n3];
            }
            return null;
          }).filter(function(t4) {
            return t4;
          }).sort(function(t4, e3) {
            return t4[0] - e3[0];
          }).forEach(function(t4) {
            e2._offsets.push(t4[0]), e2._targets.push(t4[1]);
          });
        }, t2.dispose = function() {
          g.removeData(this._element, $e), g(this._scrollElement).off(tn), this._element = null, this._scrollElement = null, this._config = null, this._selector = null, this._offsets = null, this._targets = null, this._activeTarget = null, this._scrollHeight = null;
        }, t2._getConfig = function(t3) {
          if ("string" != typeof (t3 = l({}, nn, "object" == typeof t3 && t3 ? t3 : {})).target) {
            var e2 = g(t3.target).attr("id");
            e2 || (e2 = _.getUID(Ze), g(t3.target).attr("id", e2)), t3.target = "#" + e2;
          }
          return _.typeCheckConfig(Ze, t3, on), t3;
        }, t2._getScrollTop = function() {
          return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
        }, t2._getScrollHeight = function() {
          return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
        }, t2._getOffsetHeight = function() {
          return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
        }, t2._process = function() {
          var t3 = this._getScrollTop() + this._config.offset, e2 = this._getScrollHeight(), n3 = this._config.offset + e2 - this._getOffsetHeight();
          if (this._scrollHeight !== e2 && this.refresh(), n3 <= t3) {
            var i2 = this._targets[this._targets.length - 1];
            this._activeTarget !== i2 && this._activate(i2);
          } else {
            if (this._activeTarget && t3 < this._offsets[0] && 0 < this._offsets[0])
              return this._activeTarget = null, void this._clear();
            for (var o2 = this._offsets.length; o2--; ) {
              this._activeTarget !== this._targets[o2] && t3 >= this._offsets[o2] && ("undefined" == typeof this._offsets[o2 + 1] || t3 < this._offsets[o2 + 1]) && this._activate(this._targets[o2]);
            }
          }
        }, t2._activate = function(e2) {
          this._activeTarget = e2, this._clear();
          var t3 = this._selector.split(",").map(function(t4) {
            return t4 + '[data-target="' + e2 + '"],' + t4 + '[href="' + e2 + '"]';
          }), n3 = g([].slice.call(document.querySelectorAll(t3.join(","))));
          n3.hasClass(sn) ? (n3.closest(dn).find(_n).addClass(an), n3.addClass(an)) : (n3.addClass(an), n3.parents(cn).prev(hn + ", " + fn).addClass(an), n3.parents(cn).prev(un).children(hn).addClass(an)), g(this._scrollElement).trigger(rn.ACTIVATE, { relatedTarget: e2 });
        }, t2._clear = function() {
          [].slice.call(document.querySelectorAll(this._selector)).filter(function(t3) {
            return t3.classList.contains(an);
          }).forEach(function(t3) {
            return t3.classList.remove(an);
          });
        }, n2._jQueryInterface = function(e2) {
          return this.each(function() {
            var t3 = g(this).data($e);
            if (t3 || (t3 = new n2(this, "object" == typeof e2 && e2), g(this).data($e, t3)), "string" == typeof e2) {
              if ("undefined" == typeof t3[e2])
                throw new TypeError('No method named "' + e2 + '"');
              t3[e2]();
            }
          });
        }, s(n2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }, { key: "Default", get: function() {
          return nn;
        } }]), n2;
      }();
      g(window).on(rn.LOAD_DATA_API, function() {
        for (var t2 = [].slice.call(document.querySelectorAll(ln)), e2 = t2.length; e2--; ) {
          var n2 = g(t2[e2]);
          vn._jQueryInterface.call(n2, n2.data());
        }
      }), g.fn[Ze] = vn._jQueryInterface, g.fn[Ze].Constructor = vn, g.fn[Ze].noConflict = function() {
        return g.fn[Ze] = en, vn._jQueryInterface;
      };
      var En = "bs.tab", yn = "." + En, Cn = g.fn.tab, Tn = { HIDE: "hide" + yn, HIDDEN: "hidden" + yn, SHOW: "show" + yn, SHOWN: "shown" + yn, CLICK_DATA_API: "click" + yn + ".data-api" }, Sn = "dropdown-menu", bn = "active", In = "disabled", Dn = "fade", wn = "show", An = ".dropdown", Nn = ".nav, .list-group", On = ".active", kn = "> li > .active", Pn = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]', Ln = ".dropdown-toggle", jn = "> .dropdown-menu .active", Hn = function() {
        function i2(t3) {
          this._element = t3;
        }
        var t2 = i2.prototype;
        return t2.show = function() {
          var n2 = this;
          if (!(this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && g(this._element).hasClass(bn) || g(this._element).hasClass(In))) {
            var t3, i3, e2 = g(this._element).closest(Nn)[0], o2 = _.getSelectorFromElement(this._element);
            if (e2) {
              var r2 = "UL" === e2.nodeName || "OL" === e2.nodeName ? kn : On;
              i3 = (i3 = g.makeArray(g(e2).find(r2)))[i3.length - 1];
            }
            var s2 = g.Event(Tn.HIDE, { relatedTarget: this._element }), a2 = g.Event(Tn.SHOW, { relatedTarget: i3 });
            if (i3 && g(i3).trigger(s2), g(this._element).trigger(a2), !a2.isDefaultPrevented() && !s2.isDefaultPrevented()) {
              o2 && (t3 = document.querySelector(o2)), this._activate(this._element, e2);
              var l2 = function() {
                var t4 = g.Event(Tn.HIDDEN, { relatedTarget: n2._element }), e3 = g.Event(Tn.SHOWN, { relatedTarget: i3 });
                g(i3).trigger(t4), g(n2._element).trigger(e3);
              };
              t3 ? this._activate(t3, t3.parentNode, l2) : l2();
            }
          }
        }, t2.dispose = function() {
          g.removeData(this._element, En), this._element = null;
        }, t2._activate = function(t3, e2, n2) {
          var i3 = this, o2 = (!e2 || "UL" !== e2.nodeName && "OL" !== e2.nodeName ? g(e2).children(On) : g(e2).find(kn))[0], r2 = n2 && o2 && g(o2).hasClass(Dn), s2 = function() {
            return i3._transitionComplete(t3, o2, n2);
          };
          if (o2 && r2) {
            var a2 = _.getTransitionDurationFromElement(o2);
            g(o2).removeClass(wn).one(_.TRANSITION_END, s2).emulateTransitionEnd(a2);
          } else
            s2();
        }, t2._transitionComplete = function(t3, e2, n2) {
          if (e2) {
            g(e2).removeClass(bn);
            var i3 = g(e2.parentNode).find(jn)[0];
            i3 && g(i3).removeClass(bn), "tab" === e2.getAttribute("role") && e2.setAttribute("aria-selected", false);
          }
          if (g(t3).addClass(bn), "tab" === t3.getAttribute("role") && t3.setAttribute("aria-selected", true), _.reflow(t3), g(t3).addClass(wn), t3.parentNode && g(t3.parentNode).hasClass(Sn)) {
            var o2 = g(t3).closest(An)[0];
            if (o2) {
              var r2 = [].slice.call(o2.querySelectorAll(Ln));
              g(r2).addClass(bn);
            }
            t3.setAttribute("aria-expanded", true);
          }
          n2 && n2();
        }, i2._jQueryInterface = function(n2) {
          return this.each(function() {
            var t3 = g(this), e2 = t3.data(En);
            if (e2 || (e2 = new i2(this), t3.data(En, e2)), "string" == typeof n2) {
              if ("undefined" == typeof e2[n2])
                throw new TypeError('No method named "' + n2 + '"');
              e2[n2]();
            }
          });
        }, s(i2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }]), i2;
      }();
      g(document).on(Tn.CLICK_DATA_API, Pn, function(t2) {
        t2.preventDefault(), Hn._jQueryInterface.call(g(this), "show");
      }), g.fn.tab = Hn._jQueryInterface, g.fn.tab.Constructor = Hn, g.fn.tab.noConflict = function() {
        return g.fn.tab = Cn, Hn._jQueryInterface;
      };
      var Rn = "toast", Un = "bs.toast", Wn = "." + Un, xn = g.fn[Rn], Fn = { CLICK_DISMISS: "click.dismiss" + Wn, HIDE: "hide" + Wn, HIDDEN: "hidden" + Wn, SHOW: "show" + Wn, SHOWN: "shown" + Wn }, qn = "fade", Mn = "hide", Kn = "show", Qn = "showing", Bn = { animation: "boolean", autohide: "boolean", delay: "number" }, Vn = { animation: true, autohide: true, delay: 500 }, Yn = '[data-dismiss="toast"]', Xn = function() {
        function i2(t3, e2) {
          this._element = t3, this._config = this._getConfig(e2), this._timeout = null, this._setListeners();
        }
        var t2 = i2.prototype;
        return t2.show = function() {
          var t3 = this;
          g(this._element).trigger(Fn.SHOW), this._config.animation && this._element.classList.add(qn);
          var e2 = function() {
            t3._element.classList.remove(Qn), t3._element.classList.add(Kn), g(t3._element).trigger(Fn.SHOWN), t3._config.autohide && t3.hide();
          };
          if (this._element.classList.remove(Mn), this._element.classList.add(Qn), this._config.animation) {
            var n2 = _.getTransitionDurationFromElement(this._element);
            g(this._element).one(_.TRANSITION_END, e2).emulateTransitionEnd(n2);
          } else
            e2();
        }, t2.hide = function(t3) {
          var e2 = this;
          this._element.classList.contains(Kn) && (g(this._element).trigger(Fn.HIDE), t3 ? this._close() : this._timeout = setTimeout(function() {
            e2._close();
          }, this._config.delay));
        }, t2.dispose = function() {
          clearTimeout(this._timeout), this._timeout = null, this._element.classList.contains(Kn) && this._element.classList.remove(Kn), g(this._element).off(Fn.CLICK_DISMISS), g.removeData(this._element, Un), this._element = null, this._config = null;
        }, t2._getConfig = function(t3) {
          return t3 = l({}, Vn, g(this._element).data(), "object" == typeof t3 && t3 ? t3 : {}), _.typeCheckConfig(Rn, t3, this.constructor.DefaultType), t3;
        }, t2._setListeners = function() {
          var t3 = this;
          g(this._element).on(Fn.CLICK_DISMISS, Yn, function() {
            return t3.hide(true);
          });
        }, t2._close = function() {
          var t3 = this, e2 = function() {
            t3._element.classList.add(Mn), g(t3._element).trigger(Fn.HIDDEN);
          };
          if (this._element.classList.remove(Kn), this._config.animation) {
            var n2 = _.getTransitionDurationFromElement(this._element);
            g(this._element).one(_.TRANSITION_END, e2).emulateTransitionEnd(n2);
          } else
            e2();
        }, i2._jQueryInterface = function(n2) {
          return this.each(function() {
            var t3 = g(this), e2 = t3.data(Un);
            if (e2 || (e2 = new i2(this, "object" == typeof n2 && n2), t3.data(Un, e2)), "string" == typeof n2) {
              if ("undefined" == typeof e2[n2])
                throw new TypeError('No method named "' + n2 + '"');
              e2[n2](this);
            }
          });
        }, s(i2, null, [{ key: "VERSION", get: function() {
          return "4.2.1";
        } }, { key: "DefaultType", get: function() {
          return Bn;
        } }]), i2;
      }();
      g.fn[Rn] = Xn._jQueryInterface, g.fn[Rn].Constructor = Xn, g.fn[Rn].noConflict = function() {
        return g.fn[Rn] = xn, Xn._jQueryInterface;
      }, function() {
        if ("undefined" == typeof g)
          throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.");
        var t2 = g.fn.jquery.split(" ")[0].split(".");
        if (t2[0] < 2 && t2[1] < 9 || 1 === t2[0] && 9 === t2[1] && t2[2] < 1 || 4 <= t2[0])
          throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0");
      }(), t.Util = _, t.Alert = p, t.Button = P, t.Carousel = lt, t.Collapse = bt, t.Dropdown = Zt, t.Modal = me, t.Popover = Je, t.Scrollspy = vn, t.Tab = Hn, t.Toast = Xn, t.Tooltip = Ue, Object.defineProperty(t, "__esModule", { value: true });
    });
  }
});

// dep:bootstrap_dist_js_bootstrap__min__js
var bootstrap_dist_js_bootstrap_min_js_default = require_bootstrap_min();
export {
  bootstrap_dist_js_bootstrap_min_js_default as default
};
/*!
  * Bootstrap v4.2.1 (https://getbootstrap.com/)
  * Copyright 2011-2018 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
  */
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
//# sourceMappingURL=bootstrap_dist_js_bootstrap__min__js.js.map
